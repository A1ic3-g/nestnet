// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: localuser.sql

package generated

import (
	"context"
)

const getName = `-- name: getName :one
SELECT name FROM LocalUser
`

func (q *Queries) getName(ctx context.Context) (string, error) {
	row := q.db.QueryRow(ctx, getName)
	var name string
	err := row.Scan(&name)
	return name, err
}

const getPrivKey = `-- name: getPrivKey :one
SELECT privD FROM LocalUser
`

func (q *Queries) getPrivKey(ctx context.Context) (string, error) {
	row := q.db.QueryRow(ctx, getPrivKey)
	var privd string
	err := row.Scan(&privd)
	return privd, err
}

const getPubKey = `-- name: getPubKey :one
SELECT (pubX, pubY) FROM LocalUser
`

func (q *Queries) getPubKey(ctx context.Context) (interface{}, error) {
	row := q.db.QueryRow(ctx, getPubKey)
	var column_1 interface{}
	err := row.Scan(&column_1)
	return column_1, err
}

const setName = `-- name: setName :exec
UPDATE LocalUser SET name=$1
`

func (q *Queries) setName(ctx context.Context, name string) error {
	_, err := q.db.Exec(ctx, setName, name)
	return err
}
