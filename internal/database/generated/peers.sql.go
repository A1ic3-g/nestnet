// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: peers.sql

package generated

import (
	"context"
)

const addPeer = `-- name: addPeer :exec
INSERT INTO Peers (id, name, pubX, pubY, address) VALUES ($1, $2, $3, $4, $5)
`

type addPeerParams struct {
	ID      string
	Name    string
	Pubx    string
	Puby    string
	Address string
}

func (q *Queries) addPeer(ctx context.Context, arg addPeerParams) error {
	_, err := q.db.Exec(ctx, addPeer,
		arg.ID,
		arg.Name,
		arg.Pubx,
		arg.Puby,
		arg.Address,
	)
	return err
}

const getPeers = `-- name: getPeers :many
SELECT id, name, pubx, puby, address FROM Peers
`

func (q *Queries) getPeers(ctx context.Context) ([]Peer, error) {
	rows, err := q.db.Query(ctx, getPeers)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Peer
	for rows.Next() {
		var i Peer
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Pubx,
			&i.Puby,
			&i.Address,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
